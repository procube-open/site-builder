---
- hosts: managers
  connection: local
  vars_files:
    - ../config/vars/main.yml
  vars:
    ansible_python_interpreter: "/home/vagrant/ansible/bin/python"

  tasks:
  - name: construct VPC
    ec2_vpc_net:
      name: "{{ item.name }}"
      state: present
      cidr_block: "{{ item.cidr }}"
      region: "{{ aws.region }}"
    register:  vpc_info
    with_items: "{{aws.vpc}}"
  - name: Setup internet gateway for VPC
    ec2_vpc_igw:
      vpc_id: "{{ item.vpc.id }}"
      region: "{{ aws.region }}"
      state: present
      tags:
        Name: gateway for {{ item.item.name }}
    with_items: "{{vpc_info.results | selectattr('item.with_igw', 'defined') | list}}"
    register: igw
  - name: Setup subnet for VPC
    ec2_vpc_subnet:
      state: present
      az: "{{ aws.az1 }}"
      vpc_id: "{{ item.vpc.id }}"
      cidr: "{{ item.item.cidr }}"
      resource_tags:
        Name: "subnet-{{ item.item.name }}"
    with_items: "{{vpc_info.results}}"
    register: subnet
  - name: gather default root table facts
    ec2_vpc_route_table_facts:
      region: "{{ aws.region }}"
      filters:
        vpc-id: "{{item.item.vpc.id}}"
    with_items: "{{subnet.results}}"
    register: rtb_info
  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ item.item.item.vpc.id }}"
      route_table_id: "{{ item.route_tables[0].id }}"
      region: "{{ aws.region }}"
      lookup: id
      tags:
        Name: Public for subnet
      subnets:
        - "{{ item.item.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ (igw.results | selectattr('item.item.name', 'equalto', item.item.item.item.name) | list)[0].gateway_id }}"
    with_items: "{{rtb_info.results}}"
  - name: build EC2 instance
    ec2:
      region: "{{ aws.region }}"
      vpc_subnet_id: "{{ (subnet.results | selectattr('item.item.name', 'equalto', hostvars[item].vpc) | list)[0].subnet.id }}"
      image: "{{ aws.image_id }}"
      instance_type: "{{ hostvars[item].host_size }}"
      key_name: awsroot
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: 8
          delete_on_termination: true
      assign_public_ip: true
      wait: yes
      group: default
      private_ip: "{{hostvars[item].private_ip | default(hostvars[item].ansible_host)}}"
      termination_protection: no
      count_tag:
        Name: "{{ item }}"
      exact_count: 1
      instance_tags:
        Name: "{{item}}"
    with_items: "{{ groups['targets'] }}"
    register: ec2
  - name: "Install destruct VPC playbook"
    template:
      src: aws/destroy_vpc.j2.yml
      dest: ~/.resource/destroy_vpc.yml
      mode: 0644
  - name: "Install stop all ec2 instance playbook"
    template:
      src: aws/stop_ec2.j2.yml
      dest: ~/.resource/stop_ec2.yml
      mode: 0644
  - name: "Install connect aws playbook"
    template:
      src: aws/connect_aws.j2.yml
      dest: ~/.resource/connect_aws.yml
      mode: 0644
