---
- name: destruct containers
  hosts: targets
  gather_facts: False
  become: false
  tags: destruct-containers
  vars:
    ansible_connection: local
    ansible_python_interpreter: "../../ansible/bin/python"

  tasks:
  - name: load variables from parent vars directory
    include_vars: "{{ item }}"
    with_fileglob: "../../config/vars/*.yml"

  - name: uninstall backup shell script
    tags: backup-restore
    file:
      path: "../../hosts.d/{{ inventory_hostname }}/do{{ item }}"
      state: absent
    with_items:
      - Backup
      - Restore
    when: backup_scripts is defined

  - name: compose down containers
    docker_service:
      project_src: "../../hosts.d/{{ inventory_hostname }}/{{ item }}"
      state: absent
      remove_images: all
      remove_volumes: False
      docker_host: "tcp://{{ inventory_hostname }}:2376"
      timeout: 120
      tls: yes
      cacert_path: "../../.docker/ca.pem"
      cert_path: "../../.docker/cert.pem"
      key_path:  "../../.docker/key.pem"
    with_items: "{{ services | default([])}}"
    when: swarm_master is not defined

  - name: undeploy service stacks
    shell: "DOCKER_HOST='tcp://{{ inventory_hostname }}:2376' DOCKER_TLS_VERIFY=1 docker stack rm {{ item }}"
    args:
      chdir: "../../hosts.d/{{ inventory_hostname }}/{{ item }}"
    with_items: "{{ services | default([])}}"
    when: swarm_master is defined

  - name: "delete host directory"
    connection: local
    file:
      path: "../../hosts.d/{{ inventory_hostname }}"
      state: absent
