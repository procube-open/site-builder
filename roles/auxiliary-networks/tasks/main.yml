---
# - name: install needed network manager libs
#   yum:
#     name: '{{ item }}'
#     state: installed
#   with_items:
#     - NetworkManager-glib
# ansible nmcli module is unstable for centos 7
# so use command: nmcli ... check and go strategy
- name: install packages
  yum: name=NetworkManager state=present
- name: enable and start services
  service: name=NetworkManager enabled=yes state=started
- name: check auxiliary networks network
  command: "nmcli connect show '{{ item.name }}'"
  register: auxiliary_networks_setup
  changed_when: False
  failed_when: False
  # failed_when: (auxiliary_networks_setup.results | selectattr('item.name', 'equalto', item.name) | list)[0].rc != 0 (auxiliary_networks_setup.results | selectattr('item.name', 'equalto', item.name) | list)[0].rc != 10
  with_items: "{{ auxiliary_networks }}"
- debug: var=auxiliary_networks_setup
- name: create internal network
  command: "nmcli conn add type ethernet ifname eth{{ item.device_index }} con-name {{ item.name }}"
  when: (auxiliary_networks_setup.results | selectattr('item.name', 'equalto', item.name) | list)[0].rc == 10
  notify: require reboot
  with_items: "{{ auxiliary_networks }}"
- name: assign ip address to internal network
  command: "nmcli conn modify internal_net ipv4.method manual ipv4.addresses {{ item.ip }}/{{ item.cidr_width }}"
  when: (auxiliary_networks_setup.results | selectattr('item.name', 'equalto', item.name) | list)[0].rc == 10
  with_items: "{{ auxiliary_networks }}"
  notify: require reboot
